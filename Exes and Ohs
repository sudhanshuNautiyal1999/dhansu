Q1> Check to see if a string has the same amount of 'x's and 'o's. The method must return a boolean and be case insensitive. The string can contain any char.

Examples input/output:

XO("ooxx") => true
XO("xooxx") => false
XO("ooxXm") => true
XO("zpzpzpp") => true // when no 'x' and 'o' is present should return true
XO("zzoo") => false

ANSWER
we can think the solution in simple way that we want count the number of X and O(case sensitive), One way is to it to iterate over the 
string and count X and Y but one problem is this that x and y are Case Sensitve(means we have to count x and X ==2(there is two x's)
similary for O and o as well), so to solve this we can use string.lower()(inbuilt function of string) to lowercase all the element in
string so that we can treat O as o and X as x
(PLEASE SEE TEST CASE CAREFULLY")

USING FOR LOOPS
def XO1(z):
	a,b=0,0
	x=z.lower()
	if "o" not in x and "x" not in x:
		return True
	for i in x:
		if i=="o":
			a=x.count("o")
		elif i=="x":
			b=x.count("x")
	if a==b:
		return True
	else:
		return False
WITHOUT USING FOR LOOPS
we can think the solution in simple way that we want count the number of X and O(case sensitive), Other way is to count X and Y with 
the help inbuilth string function string.count(variable we want to count) one problem is this that x and y are Case Sensitve(means we have to count x and X ==2(there is two x's)
similary for O and o as well), so to solve this we can use string.lower()(inbuilt function of string) to lowercase all the element in
string so that we can treat O as o and X as x
(PLEASE SEE TEST CASE CAREFULLY")

def XO(z):
	a,b=0,0
	x=z.lower()
	if "o" not in x and "x" not in x:
		return True
	a=x.count("x")
	b=x.count("o")
	if a==b:
		return True
	else:
		return False
